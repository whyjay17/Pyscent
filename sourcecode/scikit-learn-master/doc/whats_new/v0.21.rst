.. include:: _contributors.rst

.. currentmodule:: sklearn

.. _changes_0_21:

Version 0.21.0
==============

**In development**

Changed models
--------------

The following estimators and functions, when fit with the same data and
parameters, may produce different models from the previous version. This often
occurs due to changes in the modelling logic (bug fixes or enhancements), or in
random sampling procedures.

- :class:`discriminant_analysis.LinearDiscriminantAnalysis` for multiclass
  classification. |Fix|
- :class:`discriminant_analysis.LinearDiscriminantAnalysis` with 'eigen'
  solver. |Fix|
- :class:`linear_model.BayesianRidge` |Fix|
- Decision trees and derived ensembles when both `max_depth` and
  `max_leaf_nodes` are set. |Fix|
- :class:`linear_model.LogisticRegression` and
  :class:`linear_model.LogisticRegressionCV` with 'saga' solver. |Fix|
- :class:`ensemble.GradientBoostingClassifier` |Fix|
- :class:`neural_network.MLPClassifier` |Fix|
- :func:`svm.SVC.decision_function` and
  :func:`multiclass.OneVsOneClassifier.decision_function`. |Fix|
- :class:`linear_model.SGDClassifier` and any derived classifiers. |Fix|
- Any model using the :func:`linear_model.sag.sag_solver` function with a `0`
  seed, including :class:`linear_model.LogisticRegression`,
  :class:`linear_model.LogisticRegressionCV`, :class:`linear_model.Ridge`,
  and :class:`linear_model.RidgeCV` with 'sag' solver. |Fix|


Details are listed in the changelog below.

(While we are trying to better inform users by providing this information, we
cannot assure that this list is complete.)

Changelog
---------

Support for Python 3.4 and below has been officially dropped.

..
    See version doc/whats_new/v0.20.rst for structure. Entries should be
    prefixed with one of the labels: |MajorFeature|, |Feature|, |Efficiency|,
    |Enhancement|, |Fix| or |API|. They should be under a heading for the
    relevant module (or *Multiple Modules* or *Miscellaneous*), and within each
    section should be ordered according to the label ordering above. Entries
    should end with: :issue:`123456` by :user:`Joe Bloggs <joeongithub>`.

:mod:`sklearn.base`
...................

- |API| The R2 score used when calling ``score`` on a regressor will use
  ``multioutput='uniform_average'`` from version 0.23 to keep consistent with
  :func:`metrics.r2_score`. This will influence the ``score`` method of all
  the multioutput regressors (except for
  :class:`multioutput.MultiOutputRegressor`).
  :issue:`13157` by :user:`Hanmin Qin <qinhanmin2014>`.

:mod:`sklearn.calibration`
..........................

- |Enhancement| Added support to bin the data passed into
  :class:`calibration.calibration_curve` by quantiles instead of uniformly
  between 0 and 1.
  :issue:`13086` by :user:`Scott Cole <srcole>`.

- |Enhancement| Allow n-dimensional arrays as input for
  `calibration.CalibratedClassifierCV`. :issue:`13485` by
  :user:`William de Vazelhes <wdevazelhes>`.

:mod:`sklearn.cluster`
......................

- |MajorFeature| A new clustering algorithm: :class:`cluster.OPTICS`: an
  algoritm related to :class:`cluster.DBSCAN`, that has hyperparameters easier
  to set and that scales better, by :user:`Shane <espg>`,
  :user:`Adrin Jalali <adrinjalali>`, and :user:`Erich Schubert <kno10>`.

- |API| The ``n_components_`` attribute in :class:`cluster.AgglomerativeClustering`
  and :class:`cluster.FeatureAgglomeration` has been renamed to
  ``n_connected_components_``.
  :issue:`13427` by :user:`Stephane Couvreur <scouvreur>`.

:mod:`sklearn.datasets`
.......................

- |Fix| Added support for 64-bit group IDs and pointers in SVMLight files
  :class:`datasets.svmlight_format` :issue:`10727` by
  :user:`Bryan K Woods <bryan-woods>`.

- |Fix| :func:`datasets.load_sample_images` returns images with a deterministic
  order. :issue:`13250` by :user:`Thomas Fan <thomasjpfan>`.

:mod:`sklearn.decomposition`
............................

- |Enhancement| :class:`decomposition.KernelPCA` now has deterministic output
  (resolved sign ambiguity in eigenvalue decomposition of the kernel matrix).
  :issue:`13241` by :user:`Aurélien Bellet <bellet>`.

- |Fix| Fixed a bug in :class:`decomposition.KernelPCA`, `fit().transform()`
  now produces the correct output (the same as `fit_transform()`) in case
  of non-removed zero eigenvalues (`remove_zero_eig=False`).
  `fit_inverse_transform` was also accelerated by using the same trick as
  `fit_transform` to compute the transform of `X`.
  :issue:`12143` by :user:`Sylvain Marié <smarie>`

- |Fix| Fixed a bug in :class:`decomposition.NMF` where `init = 'nndsvd'`,
  `init = 'nndsvda'`, and `init = 'nndsvdar'` are allowed when
  `n_components < n_features` instead of
  `n_components <= min(n_samples, n_features)`.
  :issue:`11650` by :user:`Hossein Pourbozorg <hossein-pourbozorg>` and
  :user:`Zijie (ZJ) Poh <zjpoh>`.

- |API| The default value of the :code:`init` argument in
  :func:`decomposition.non_negative_factorization` will change from
  :code:`random` to :code:`None` in version 0.23 to make it consistent with
  :class:`decomposition.NMF`. A FutureWarning is raised when
  the default value is used.
  :issue:`12988` by :user:`Zijie (ZJ) Poh <zjpoh>`.

:mod:`sklearn.discriminant_analysis`
....................................

- |Enhancement| :class:`discriminant_analysis.LinearDiscriminantAnalysis` now
  preserves ``float32`` and ``float64`` dtypes. :issue:`8769` and
  :issue:`11000` by :user:`Thibault Sejourne <thibsej>`

- |Fix| A ``ChangedBehaviourWarning`` is now raised when
  :class:`discriminant_analysis.LinearDiscriminantAnalysis` is given as
  parameter ``n_components > min(n_features, n_classes - 1)``, and
  ``n_components`` is changed to ``min(n_features, n_classes - 1)`` if so.
  Previously the change was made, but silently. :issue:`11526` by
  :user:`William de Vazelhes<wdevazelhes>`.

- |Fix| Fixed a bug in :class:`discriminant_analysis.LinearDiscriminantAnalysis`
  where the predicted probabilities would be incorrectly computed in the
  multiclass case. :issue:`6848`, by :user:`Agamemnon Krasoulis
  <agamemnonc>` and `Guillaume Lemaitre <glemaitre>`.

- |Fix| Fixed a bug in :class:`discriminant_analysis.LinearDiscriminantAnalysis`
  where the predicted probabilities would be incorrectly computed with ``eigen``
  solver. :issue:`11727`, by :user:`Agamemnon Krasoulis
  <agamemnonc>`.

:mod:`sklearn.dummy`
....................

- |Fix| Fixed a bug in :class:`dummy.DummyClassifier` where the
  ``predict_proba`` method was returning int32 array instead of
  float64 for the ``stratified`` strategy. :issue:`13266` by
  :user:`Christos Aridas<chkoar>`.

- |Fix| Fixed a bug in :class:`dummy.DummyClassifier` where it was throwing a
  dimension mismatch error in prediction time if a column vector ``y`` with
  ``shape=(n, 1)`` was given at ``fit`` time. :issue:`13545` by :user:`Nick
  Sorros <nsorros>` and `Adrin Jalali`_.

:mod:`sklearn.ensemble`
.......................

- |Efficiency| Make :class:`ensemble.IsolationForest` prefer threads over
  processes when running with ``n_jobs > 1`` as the underlying decision tree
  fit calls do release the GIL. This changes reduces memory usage and
  communication overhead. :issue:`12543` by :user:`Isaac Storch <istorch>`
  and `Olivier Grisel`_.

- |Enhancement| Minimized the validation of X in
  :class:`ensemble.AdaBoostClassifier` and :class:`ensemble.AdaBoostRegressor`
  :issue:`13174` by :user:`Christos Aridas <chkoar>`.
  
- |Enhancement| :class:`ensemble.IsolationForest` now exposes ``warm_start``
  parameter, allowing iterative addition of trees to an isolation 
  forest. :issue:`13496` by :user:`Peter Marko <petibear>`.

- |Efficiency| Make :class:`ensemble.IsolationForest` more memory efficient
  by avoiding keeping in memory each tree prediction. :issue:`13260` by
  `Nicolas Goix`_.

- |Efficiency| :class:`ensemble.IsolationForest` now uses chunks of data at
  prediction step, thus capping the memory usage. :issue:`13283` by
  `Nicolas Goix`_.

- |Fix| Fixed a bug in :class:`ensemble.GradientBoostingClassifier` and
  :class:`ensemble.GradientBoostingRegressor`, which didn't support
  scikit-learn estimators as the initial estimator. Also added support of
  initial estimator which does not support sample weights. :issue:`12436` by
  :user:`Jérémie du Boisberranger <jeremiedbb>` and :issue:`12983` by
  :user:`Nicolas Hug<NicolasHug>`.

- |Fix| Fixed the output of the average path length computed in
  :class:`ensemble.IsolationForest` when the input is either 0, 1 or 2.
  :issue:`13251` by :user:`Albert Thomas <albertcthomas>`
  and :user:`joshuakennethjones <joshuakennethjones>`.

- |Fix| Fixed a bug in :class:`ensemble.GradientBoostingClassifier` where
  the gradients would be incorrectly computed in multiclass classification
  problems. :issue:`12715` by :user:`Nicolas Hug<NicolasHug>`.

- |Fix| Fixed a bug in :class:`ensemble.GradientBoostingClassifier` where
  validation sets for early stopping were not sampled with stratification.
  :issue:`13164` by :user:`Nicolas Hug<NicolasHug>`.

- |Fix| Fixed a bug in :class:`ensemble.GradientBoostingClassifier` where
  the default initial prediction of a multiclass classifier would predict the
  classes priors instead of the log of the priors. :issue:`12983` by
  :user:`Nicolas Hug<NicolasHug>`.

- |Fix| Fixed a bug in :mod:`ensemble` where the ``predict`` method would
  error for multiclass multioutput forests models if any targets were strings.
  :issue:`12834` by :user:`Elizabeth Sander <elsander>`.

- |Fix| Fixed a bug in :class:`ensemble.gradient_boosting.LossFunction` and
  :class:`ensemble.gradient_boosting.LeastSquaresError` where the default
  value of ``learning_rate`` in ``update_terminal_regions`` is not consistent
  with the document and the caller functions.
  :issue:`6463` by :user:`movelikeriver <movelikeriver>`.

- |Fix| :func:`ensemble.partial_dependence` now takes sample weights into
  account for the partial dependence computation when the
  gradient boosting model has been trained with sample weights.
  :issue:`13193` by :user:`Samuel O. Ronsin <samronsin>`.

:mod:`sklearn.externals`
........................

- |API| Deprecated :mod:`externals.six` since we have dropped support for
  Python 2.7. :issue:`12916` by :user:`Hanmin Qin <qinhanmin2014>`.

:mod:`sklearn.impute`
.....................

- |MajorFeature| Added :class:`impute.IterativeImputer`, which is a strategy
  for imputing missing values by modeling each feature with missing values as a
  function of other features in a round-robin fashion. :issue:`8478` and
  :issue:`12177` by :user:`Sergey Feldman <sergeyf>` :user:`Ben Lawson
  <benlawson>`.

- |Fix| In :class:`impute.MissingIndicator` avoid implicit densification by
  raising an exception if input is sparse add `missing_values` property
  is set to 0. :issue:`13240` by :user:`Bartosz Telenczuk <btel>`.

- |Fix| Fixed two bugs in :class:`MissingIndicator`. First, when ``X`` is
  sparse, all the non-zero non missing values used to become explicit False in
  the transformed data. Then, when ``features='missing-only'``, all features
  used to be kept if there were no missing values at all. :issue:`13562` by
  :user:`Jérémie du Boisberranger <jeremiedbb>`.

:mod:`sklearn.isotonic`
.......................

- |Feature| Allow different dtypes (such as float32) in
  :class:`isotonic.IsotonicRegression` :issue:`8769` by :user:`Vlad Niculae <vene>`

:mod:`sklearn.linear_model`
...........................

- |Feature| :class:`linear_model.LogisticRegression` and
  :class:`linear_model.LogisticRegressionCV` now support Elastic-Net penalty,
  with the 'saga' solver. :issue:`11646` by :user:`Nicolas Hug <NicolasHug>`.

- |Feature| Added :class:`linear_model.lars_path_gram`, which is
  :class:`linear_model.lars_path` in the sufficient stats mode, allowing
  users to compute :class:`linear_model.lars_path` without providing
  ``X`` and ``y``. :issue:`11699` by :user:`Kuai Yu <yukuairoy>`.

- |Enhancement| :func:`linear_model.make_dataset` now preserves
  ``float32`` and ``float64`` dtypes. :issue:`8769` and :issue:`11000` by
  :user:`Nelle Varoquaux <NelleV>`, :user:`Arthur Imbert <Henley13>`,
  :user:`Guillaume Lemaitre <glemaitre>`, and :user:`Joan Massich <massich>`

- |Enhancement| :class:`linear_model.LogisticRegression` now supports an
  unregularized objective by setting ``penalty`` to ``'none'``. This is
  equivalent to setting ``C=np.inf`` with l2 regularization. Not supported
  by the liblinear solver. :issue:`12860` by :user:`Nicolas Hug
  <NicolasHug>`.

- |Enhancement| `sparse_cg` solver in :class:`linear_model.Ridge`
  now supports fitting the intercept (i.e. ``fit_intercept=True``) when
  inputs are sparse. :issue:`13336` by :user:`Bartosz Telenczuk <btel>`.

- |Fix| Fixed a bug in :class:`linear_model.LogisticRegression` and
  :class:`linear_model.LogisticRegressionCV` with 'saga' solver, where the
  weights would not be correctly updated in some cases.
  :issue:`11646` by `Tom Dupre la Tour`_.

- |Fix| Fixed the posterior mean, posterior covariance and returned
  regularization parameters in :class:`linear_model.BayesianRidge`. The
  posterior mean and the posterior covariance were not the ones computed
  with the last update of the regularization parameters and the returned
  regularization parameters were not the final ones. Also fixed the formula of
  the log marginal likelihood used to compute the score when
  `compute_score=True`. :issue:`12174` by
  :user:`Albert Thomas <albertcthomas>`.

- |Fix| Fixed a bug in :class:`linear_model.LassoLarsIC`, where user input
  ``copy_X=False`` at instance creation would be overridden by default
  parameter value ``copy_X=True`` in ``fit``.
  :issue:`12972` by :user:`Lucio Fernandez-Arjona <luk-f-a>`

- |Fix| Fixed a bug in :class:`linear_model.LinearRegression` that
  was not returning the same coeffecients and intercepts with
  ``fit_intercept=True`` in sparse and dense case.
  :issue:`13279` by `Alexandre Gramfort`_

- |Fix| Fixed a bug in :class:`linear_model.HuberRegressor` that was
  broken when ``X`` was of dtype bool. :issue:`13328` by `Alexandre Gramfort`_.

- |Fix| Fixed a performance issue of ``saga`` and ``sag`` solvers when called
  in a :class:`joblib.Parallel` setting with ``n_jobs > 1`` and
  ``backend="threading"``, causing them to perform worse than in the sequential
  case. :issue:`13389` by :user:`Pierre Glaser <pierreglaser>`.

- |API|  The use of :class:`linear_model.lars_path` with ``X=None``
  while passing ``Gram`` is deprecated in version 0.21 and will be removed
  in version 0.23. Use :class:`linear_model.lars_path_gram` instead.
  :issue:`11699` by :user:`Kuai Yu <yukuairoy>`.

- |API| :func:`linear_model.logistic_regression_path` is deprecated
  in version 0.21 and will be removed in version 0.23.
  :issue:`12821` by :user:`Nicolas Hug <NicolasHug>`.

- |Fix| Fixed a bug in
  :class:`linear_model.stochastic_gradient.BaseSGDClassifier` that was not
  deterministic when trained in a multi-class setting on several threads.
  :issue:`13422` by :user:`Clément Doumouro <ClemDoum>`.

:mod:`sklearn.manifold`
............................

- |Efficiency| Make :func:`manifold.tsne.trustworthiness` use an inverted index
  instead of an `np.where` lookup to find the rank of neighbors in the input
  space. This improves efficiency in particular when computed with
  lots of neighbors and/or small datasets.
  :issue:`9907` by :user:`William de Vazelhes <wdevazelhes>`.

:mod:`sklearn.metrics`
......................

- |Feature| Added the :func:`metrics.max_error` metric and a corresponding
  ``'max_error'`` scorer for single output regression.
  :issue:`12232` by :user:`Krishna Sangeeth <whiletruelearn>`.

- |Feature| Add :func:`metrics.multilabel_confusion_matrix`, which calculates a
  confusion matrix with true positive, false positive, false negative and true
  negative counts for each class. This facilitates the calculation of set-wise
  metrics such as recall, specificity, fall out and miss rate.
  :issue:`11179` by :user:`Shangwu Yao <ShangwuYao>` and `Joel Nothman`_.

- |Feature| :func:`metrics.jaccard_score` has been added to calculate the
  Jaccard coefficient as an evaluation metric for binary, multilabel and
  multiclass tasks, with an interface analogous to :func:`metrics.f1_score`.
  :issue:`13151` by :user:`Gaurav Dhingra <gxyd>` and `Joel Nothman`_.

- |Efficiency| Faster :func:`metrics.pairwise_distances` with `n_jobs`
  > 1 by using a thread-based backend, instead of process-based backends.
  :issue:`8216` by :user:`Pierre Glaser <pierreglaser>` and
  :user:`Romuald Menuet <zanospi>`

- |Efficiency| The pairwise manhattan distances with sparse input now uses the
  BLAS shipped with scipy instead of the bundled BLAS. :issue:`12732` by
  :user:`Jérémie du Boisberranger <jeremiedbb>`

- |Enhancement| Use label `accuracy` instead of `micro-average` on
  :func:`metrics.classification_report` to avoid confusion. `micro-average` is
  only shown for multi-label or multi-class with a subset of classes because
  it is otherwise identical to accuracy.
  :issue:`12334` by :user:`Emmanuel Arias <eamanu@eamanu.com>`,
  `Joel Nothman`_ and `Andreas Müller`_

- |Fix| The metric :func:`metrics.r2_score` is degenerate with a single sample
  and now it returns NaN and raises :class:`exceptions.UndefinedMetricWarning`.
  :issue:`12855` by :user:`Pawel Sendyk <psendyk>`.

- |API| The parameter ``labels`` in :func:`metrics.hamming_loss` is deprecated
  in version 0.21 and will be removed in version 0.23.
  :issue:`10580` by :user:`Reshama Shaikh <reshamas>` and :user:`Sandra
  Mitrovic <SandraMNE>`.

- |API| :func:`metrics.jaccard_similarity_score` is deprecated in favour of
  the more consistent :func:`metrics.jaccard_score`. The former behavior for
  binary and multiclass targets is broken.
  :issue:`13151` by `Joel Nothman`_.

:mod:`sklearn.mixture`
......................

- |Fix| Fixed a bug in :class:`mixture.BaseMixture` and therefore on estimators
  based on it, i.e. :class:`mixture.GaussianMixture` and
  :class:`mixture.BayesianGaussianMixture`, where ``fit_predict`` and
  ``fit.predict`` were not equivalent. :issue:`13142` by
  :user:`Jérémie du Boisberranger <jeremiedbb>`.

:mod:`sklearn.model_selection`
..............................

- |Feature| Classes :class:`~model_selection.GridSearchCV` and
  :class:`~model_selection.RandomizedSearchCV` now allow for refit=callable
  to add flexibility in identifying the best
  estimator. An example for this interface has been added.
  :issue:`11354` by :user:`Wenhao Zhang <wenhaoz@ucla.edu>`,
  `Joel Nothman`_ and :user:`Adrin Jalali <adrinjalali>`.

- |Enhancement| Classes :class:`~model_selection.GridSearchCV`,
  :class:`~model_selection.RandomizedSearchCV`, and methods
  :func:`~model_selection.cross_val_score`,
  :func:`~model_selection.cross_val_predict`,
  :func:`~model_selection.cross_validate`, now print train scores when
  `return_train_scores` is True and `verbose` > 2. For
  :func:`~model_selection.learning_curve`, and
  :func:`~model_selection.validation_curve` only the latter is required.
  :issue:`12613` and :issue:`12669` by :user:`Marc Torrellas <marctorrellas>`.

- |Enhancement| Some :term:`CV splitter` classes and
  `model_selection.train_test_split` now raise ``ValueError`` when the
  resulting train set is empty. :issue:`12861` by :user:`Nicolas Hug
  <NicolasHug>`.

- |Fix| Fixed a bug where :class:`model_selection.StratifiedKFold`
  shuffles each class's samples with the same ``random_state``,
  making ``shuffle=True`` ineffective.
  :issue:`13124` by :user:`Hanmin Qin <qinhanmin2014>`.

- |Fix| Added ability for :func:`model_selection.cross_val_predict` to handle
  multi-label (and multioutput-multiclass) targets with ``predict_proba``-type
  methods. :issue:`8773` by :user:`Stephen Hoover <stephen-hoover>`.

- |Fix| Fixed an issue in :func:`~model_selection.cross_val_predict` where
  `method="predict_proba"` returned always `0.0` when one of the classes was
  excluded in a cross-validation fold.
  :issue:`13366` by :user:`Guillaume Fournier <gfournier>`

:mod:`sklearn.multiclass`
.........................

- |Fix| Fixed an issue in :func:`multiclass.OneVsOneClassifier.decision_function`
  where the decision_function value of a given sample was different depending on
  whether the decision_function was evaluated on the sample alone or on a batch
  containing this same sample due to the scaling used in decision_function.
  :issue:`10440` by :user:`Jonathan Ohayon <Johayon>`.

:mod:`sklearn.neighbors`
........................

- |MajorFeature| A metric learning algorithm:
  :class:`neighbors.NeighborhoodComponentsAnalysis`, which implements the
  Neighborhood Components Analysis algorithm described in Goldberger et al.
  (2005). :issue:`10058` by :user:`William de Vazelhes
  <wdevazelhes>` and :user:`John Chiotellis <johny-c>`.

- |API| Methods in :class:`neighbors.NearestNeighbors` :
  :func:`~neighbors.NearestNeighbors.kneighbors`,
  :func:`~neighbors.NearestNeighbors.radius_neighbors`,
  :func:`~neighbors.NearestNeighbors.kneighbors_graph`,
  :func:`~neighbors.NearestNeighbors.radius_neighbors_graph`
  now raise ``NotFittedError``, rather than ``AttributeError``,
  when called before ``fit`` :issue:`12279` by :user:`Krishna Sangeeth
  <whiletruelearn>`.

:mod:`sklearn.neural_network`
.............................

- |Fix| Fixed a bug in :class:`neural_network.MLPClassifier` and
  :class:`neural_network.MLPRegressor` where the option :code:`shuffle=False`
  was being ignored. :issue:`12582` by :user:`Sam Waterbury <samwaterbury>`.

- |Fix| Fixed a bug in :class:`neural_network.MLPClassifier` where
  validation sets for early stopping were not sampled with stratification. In
  multilabel case however, splits are still not stratified.
  :issue:`13164` by :user:`Nicolas Hug<NicolasHug>`.

:mod:`sklearn.pipeline`
.......................

- |Feature| :class:`pipeline.Pipeline` can now use indexing notation (e.g.
  ``my_pipeline[0:-1]``) to extract a subsequence of steps as another Pipeline
  instance.  A Pipeline can also be indexed directly to extract a particular
  step (e.g. ``my_pipeline['svc']``), rather than accessing ``named_steps``.
  :issue:`2568` by `Joel Nothman`_.

- |API| :class:`pipeline.Pipeline` now supports using ``'passthrough'`` as a
  transformer. :issue:`11144` by :user:`Thomas Fan <thomasjpfan>`.

- |Enhancement| :class:`pipeline.Pipeline`  implements ``__len__`` and
  therefore ``len(pipeline)`` returns the number of steps in the pipeline.
  :issue:`13439` by :user:`Lakshya KD <LakshKD>`.

:mod:`sklearn.preprocessing`
............................

- |Feature| :class:`preprocessing.OneHotEncoder` now supports dropping one
  feature per category with a new drop parameter. :issue:`12908` by
  :user:`Drew Johnston <drewmjohnston>`.

- |Efficiency| Make :class:`preprocessing.MultiLabelBinarizer` to cache class
  mappings instead of calculating it every time on the fly.
  :issue:`12116` by :user:`Ekaterina Krivich <kiote>` and `Joel Nothman`_.

- |Efficiency| :class:`preprocessing.PolynomialFeatures` now supports compressed
  sparse row (CSR) matrices as input for degrees 2 and 3. This is typically much
  faster than the dense case as it scales with matrix density and expansion degree
  (on the order of density^degree), and is much, much faster than the compressed
  sparse column (CSC) case. :issue:`12197` by :user:`Andrew Nystrom <awnystrom>`.

- |Efficiency| |API| Speed improvement in :class:`preprocessing.PolynomialFeatures`,
  in the dense case. Also added a new parameter ``order`` which controls output
  order for further speed performances. :issue:`12251` by `Tom Dupre la Tour`_.

- |Fix| Fixed the calculation overflow when using a float16 dtype with
  :class:`preprocessing.StandardScaler`. :issue:`13007` by
  :user:`Raffaello Baluyot <baluyotraf>`

- |Fix| Fixed a bug in :class:`preprocessing.QuantileTransformer` and
  :func:`preprocessing.quantile_transform` to force n_quantiles to be at most
  equal to n_samples. Values of n_quantiles larger than n_samples were either
  useless or resulting in a wrong approximation of the cumulative distribution
  function estimator. :issue:`13333` by :user:`Albert Thomas <albertcthomas>`.

- |API| The default value of `copy` in :func:`preprocessing.quantile_transform`
  will change from False to True in 0.23 in order to make it more consistent
  with the default `copy` values of other functions in
  :mod:`preprocessing.data` and prevent unexpected side effects by modifying
  the value of `X` inplace.
  :issue:`13459` by :user:`Hunter McGushion <HunterMcGushion>`.

:mod:`sklearn.svm`
..................

- |Fix| Fixed an issue in :func:`svm.SVC.decision_function`
  when ``decision_function_shape='ovr'``. The decision_function value of a given
  sample was different depending on whether the decision_function was evaluated
  on the sample alone or on a batch containing this same sample due to the scaling
  used in decision_function. :issue:`10440` by :user:`Jonathan Ohayon <Johayon>`.

:mod:`sklearn.tree`
...................

- |Feature| Decision Trees can now be plotted with matplotlib using
  :func:`tree.plot_tree` without relying on the ``dot`` library,
  removing a hard-to-install dependency. :issue:`8508` by `Andreas Müller`_.

- |Feature| Decision Trees can now be exported in a human readable
  textual format using :func:`tree.export.export_text`.
  :issue:`6261` by `Giuseppe Vettigli <JustGlowing>`.

- |Feature| ``get_n_leaves()`` and ``get_depth()`` have been added to
  :class:`tree.BaseDecisionTree` and consequently all estimators based
  on it, including :class:`tree.DecisionTreeClassifier`,
  :class:`tree.DecisionTreeRegressor`, :class:`tree.ExtraTreeClassifier`,
  and :class:`tree.ExtraTreeRegressor`.
  :issue:`12300` by :user:`Adrin Jalali <adrinjalali>`.

- |Fix| Fixed an issue with :class:`tree.BaseDecisionTree`
  and consequently all estimators based
  on it, including :class:`tree.DecisionTreeClassifier`,
  :class:`tree.DecisionTreeRegressor`, :class:`tree.ExtraTreeClassifier`,
  and :class:`tree.ExtraTreeRegressor`, where they used to exceed the given
  ``max_depth`` by 1 while expanding the tree if ``max_leaf_nodes`` and
  ``max_depth`` were both specified by the user. Please note that this also
  affects all ensemble methods using decision trees.
  :issue:`12344` by :user:`Adrin Jalali <adrinjalali>`.

Multiple modules
................

- |MajorFeature| The `__repr__()` method of all estimators (used when calling
  `print(estimator)`) has been entirely re-written, building on Python's
  pretty printing standard library. All parameters are printed by default,
  but this can be altered with the ``print_changed_only`` option in
  :func:`sklearn.set_config`. :issue:`11705` by :user:`Nicolas Hug
  <NicolasHug>`.
- |MajorFeature| Add estimators tags: these are annotations of estimators
  that allow programmatic inspection of their capabilities, such as sparse
  matrix support, supported output types and supported methods. Estimator
  tags also determine the tests that are run on an estimator when
  `check_estimator` is called. Read more in the :ref:`User Guide
  <estimator_tags>`. :issue:`8022` by :user:`Andreas Müller <amueller>`.
- |Efficiency| Memory copies are avoided when casting arrays to a different
  dtype in multiple estimators. :issue:`11973` by :user:`Roman Yurchak
  <rth>`.
- |Fix| Fixed a bug in the implementation of the :func:`our_rand_r`
  helper function that was not behaving consistently across platforms.
  :issue:`13422` by :user:`Madhura Parikh <jdnc>` and
  :user:`Clément Doumouro <ClemDoum>`.

Changes to estimator checks
---------------------------

These changes mostly affect library developers.

- Add ``check_fit_idempotent`` to
  :func:`~utils.estimator_checks.check_estimator`, which checks that
  when `fit` is called twice with the same data, the ouput of
  `predict`, `predict_proba`, `transform`, and `decision_function` does not
  change. :issue:`12328` by :user:`Nicolas Hug <NicolasHug>`
